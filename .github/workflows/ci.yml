name: CI
on:
  push: 
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }} # Surge email can find using surge whoami
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }} # Generate using surge token on local machine
    steps:
      - uses: actions/checkout@v2
      - name: Cashe node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - run: npm ci # similar as npm install but for CI
      - name: Test formatting with prettier
        #continue-on-error: true
        run: npm run format:check
      - name: Create test coverage
        run: npm test -- --coverage
        env:
          CI: true
      - name: Upload test coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload build folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging # uses SURGE_LOGIN and SURGE_TOKEN
        if: github.event_name == 'push' #&& github.ref == 'refs/heads/develop' if we want to deploy only on pushing to develop branch
        run: npx surge --project ./build --domain clean-eye.surge.sh # Domain created from local pc. Can find using surge list

      # Same will be done if we want to deploy to production only if condition is different
      # - name: Deploy to Production
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      #   run: npx surge --project ./build --domain clean-eye.surge.sh # Domain created from local pc. Can find using surge list
        

